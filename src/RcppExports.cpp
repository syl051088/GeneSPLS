// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// widekernelpls_fit
List widekernelpls_fit(arma::mat X, arma::mat Y, int ncomp, bool center, double tol, int maxit);
RcppExport SEXP _GeneSPLS_widekernelpls_fit(SEXP XSEXP, SEXP YSEXP, SEXP ncompSEXP, SEXP centerSEXP, SEXP tolSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< bool >::type center(centerSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(widekernelpls_fit(X, Y, ncomp, center, tol, maxit));
    return rcpp_result_gen;
END_RCPP
}
// widekernelpls_rcpp
List widekernelpls_rcpp(arma::mat X, arma::mat Y, int ncomp);
RcppExport SEXP _GeneSPLS_widekernelpls_rcpp(SEXP XSEXP, SEXP YSEXP, SEXP ncompSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    rcpp_result_gen = Rcpp::wrap(widekernelpls_rcpp(X, Y, ncomp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GeneSPLS_widekernelpls_fit", (DL_FUNC) &_GeneSPLS_widekernelpls_fit, 6},
    {"_GeneSPLS_widekernelpls_rcpp", (DL_FUNC) &_GeneSPLS_widekernelpls_rcpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_GeneSPLS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
