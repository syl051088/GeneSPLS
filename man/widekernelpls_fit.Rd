% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{widekernelpls_fit}
\alias{widekernelpls_fit}
\title{Wide Kernel PLS Algorithm Implementation}
\usage{
widekernelpls_fit(X, Y, ncomp, center, tol, maxit)
}
\arguments{
\item{X}{Predictor matrix (n x p), p is the number of predictors}

\item{Y}{Response matrix (n x m), m is the number of responses}

\item{ncomp}{Number of components to extract (default: 5)}

\item{center}{Logical, whether to center X and Y (default: TRUE)}

\item{tol}{Numeric, tolerance used for determining convergence (default: 1.5e-8)}

\item{maxit}{Integer, maximum number of iterations (default: 100)}
}
\value{
A list containing:
\item{coefficients}{The regression coefficients matrix}
\item{projection}{The projection matrix}
\item{Xmeans}{The column means of X (if centered)}
\item{Ymeans}{The column means of Y (if centered)}
}
\description{
This function implements the wide kernel PLS algorithm as described by
Rannar et al. (1994). It's optimized for datasets with more variables than observations.
}
\examples{

set.seed(815)

# Simulating high-dimensional predictor matrix (p >> n)
n <- 10   # Number of observations
p <- 20  # Number of predictors

X <- matrix(rnorm(n * p), nrow = n, ncol = p)  # Random normal predictors

# True coefficients: Only first 5 predictors contribute to Y
beta <- c(rnorm(5, sd = 2), rep(0, p - 5))

# Generating response variable Y with N(0,1) noise
Y <- X \%*\% beta + rnorm(n)


pls_cpp = GeneSPLS::widekernelpls_fit(X, Y, 5, center = FALSE)
pls_cpp$projection
pls_cpp$coefficients

}
